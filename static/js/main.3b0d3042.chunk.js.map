{"version":3,"sources":["components/Details.js","reducer/reducer.js","components/Navbar.js","components/Grid.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Details","id","useParams","useState","loading","setLoading","item","setItem","fetchItem","url","a","fetch","json","then","response","catch","err","console","error","useEffect","map","key","Container","className","name","toUpperCase","Row","Col","md","draggable","src","image_url","alt","height","width","description","Button","variant","size","to","initialState","data","reducer","state","action","type","payload","navContainer","margin","backgroundColor","Header","props","dispatch","style","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","onClick","sortedData","sort","b","abv","Grid","rows","chunk","cols","index","beer","sm","Card","Body","Title","Img","beerListReducer","useReducer","beerData","status","jsonResponse","getBeer","App","exact","path","Home","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b0d3042.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\n\nconst Details = () => {\n\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(true);\n  const [item, setItem] = useState([]);\n\n  const fetchItem = async (url) => {\n    const response = await fetch(url);\n    response\n      .json()\n      .then(setLoading(false))\n      .then(response => setItem(response))\n      .catch(err => console.error(err));\n  }\n\n  useEffect(() => {\n    fetchItem(`https://api.punkapi.com/v2/beers/${id}`);\n  }, [id])\n\n  return (\n    <div>\n      {loading ? <div>'Loading...'</div> : item.map((item) =>\n        (\n          <Fragment key={item.id}>\n            <Container>\n              <div className=\"h1Container\">\n                <h1>{item.name.toUpperCase()}</h1>\n              </div>\n              <Row>\n                <Col md={6}>\n                  <img draggable=\"false\" src={item.image_url} alt=\"\" height=\"100%\" width='70%' />\n                </Col>\n                <Col md={6}>\n                  <h2 className=\"desc\">Description</h2>\n                  <p>{item.description}</p>\n                  <Button variant=\"info\" size=\"lg\">\n                    <Link to=\"/\" className=\"link\">Back</Link>\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </Fragment>\n        )\n      )}\n    </div>\n  )\n};\n\n\nexport default Details;","\nexport const initialState = {\n    loading: false,\n    error: false,\n    data: []\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"loading\":\n            return { ...state, loading: action.payload };\n        case \"error\":\n            return { ...state, loading: false, error: action.payload };\n        case \"success\":\n            return { ...state, error: false, loading: false, data: action.payload };\n        case \"sortByName\":\n        case \"sortBystrength\":\n            return { ...state, error: false, loading: false, data: action.payload };\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\n\nconst Header = (props) => {\n    const {data, dispatch} = props;\n\n    function sortByStrength(){\n        const sortedData = data.sort((a, b) => (a.abv > b.abv) ? 1 : -1);\n        dispatch({type: \"sortBystrength\", payload: sortedData })\n    }\n\n    function sortByName(){\n        const sortedData = data.sort((a, b) => (a.name > b.name) ? 1 : -1);\n        dispatch({type: \"sortByName\", payload: sortedData })\n    }\n\n    return (\n        <div style={navContainer}>\n            <Navbar expand=\"lg\">\n                <Navbar.Brand href=\"/\">Punk Beer</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"nav navbar-nav ml-auto\">\n                        <NavDropdown title=\"Sort By\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item onClick={sortByName}>Name</NavDropdown.Item>\n                            <NavDropdown.Item onClick={sortByStrength}>Strength</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    )\n}\n\nconst navContainer = {\n    margin: \"40px auto\",\n    backgroundColor: \"#e3f2fd\"\n}\n\nexport default Header;\n\n\n\n\n\n","import React from 'react';\nimport { chunk } from 'lodash';\nimport { Link } from 'react-router-dom';\nimport  Header from './Navbar';\nimport { Card, Col, Row, Container, Button } from 'react-bootstrap';\n\nconst Grid = (props) => {\n\n    const { data } = props;\n    const cols = 3;\n    const colWidth = 12 / cols;\n    const rows = chunk(data, cols);\n\n    return (\n        <Container className=\"text-center\">\n            <Header {...props}/>\n            <div>\n                {rows.map((cols, index) => (\n                        <Row key={index}>\n                            {cols.map((beer) => (\n                                <Col sm={12} md={colWidth} key={beer.id}>\n                                    <Card style={{ width: '20rem', height: '100%'}}>\n                                        <Card.Body>\n                                            <Card.Title className=\"card-title\">{beer.name}</Card.Title>\n                                            <Card.Img variant=\"top\" src={beer.image_url} />\n                                            <Button variant=\"outline-dark\" className=\"link-btn\">\n                                                <Link to={`details/${beer.id}`}>Find out more</Link>\n                                            </Button>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            ))}\n                        </Row>\n                    ))}\n            </div>\n        </Container>\n    )\n}\n\nexport default Grid;\n\n\n\n\n\n\n\n","/* eslint-disable react-hooks/rules-of-hooks */\n\nimport React, { useEffect, useReducer } from 'react';\nimport { reducer,  initialState }  from '../reducer/reducer';\nimport Grid from './Grid';\n\n\nconst beerListReducer = () => {\n    const api = 'https://api.punkapi.com/v2/beers';\n    \n    const [beerData, dispatch] = useReducer(reducer, initialState);\n    const {loading, data } = beerData;\n\n    useEffect(() => {\n      const getBeer = async () => {\n        dispatch({ type: \"loading\", payload: true });\n        const response = await fetch(api);\n        if (response.status < 300 && response.status >= 200) {\n          const jsonResponse = await response.json();\n          dispatch({ type: \"success\", payload: jsonResponse });\n        } else {\n          dispatch({ type: \"error\", payload: true });\n        }\n      };\n      getBeer();\n}, []);\n\n    return (\n        <div className='container-bg Logo'>\n            {loading ? <div>'Loading...'</div> : <Grid data={data} dispatch={dispatch}/>}\n        </div>\n    )\n}\n\nexport default beerListReducer;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Details from './components/Details'\nimport Home from './components/Home';\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n\n  return (\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/details/:id\">\n          <Details />\n        </Route>\n      </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n     <Router>\n        <App />\n     </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}